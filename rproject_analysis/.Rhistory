data.frame(cmatrix) <- intersect(bpmldata$Site, tpmldata$Site)
as_data_frame(cmatrix) <- intersect(bpmldata$Site, tpmldata$Site)
cmatrix <- left_join(bpmldata$Site, tpmldata$Site, by = "FN")
cmatrix <- left_join(bpmldata$Site, tpmldata$Site, by = "Site")
cmatrix <- left_join(bpmldata, tpmldata, by = "Site")
View(cmatrix)
cmatrix <- intersect(bpmldata, tpmldata, by = "Site")
cmatrix <- intersect(bpmldata, tpmldata)
cmatrix <- union(bpmldata, tpmldata)
cmatrix <- union(bpmldata$Site, tpmldata$Site)
cmatrix <- data.frame(cmatrix)
View(cmatrix)
cmatrix <- intersect(bpmldata$Site, tpmldata$Site)
cmatrix <- data.frame(cmatrix)
View(cmatrix)
write.csv(bpmldata, "bp.csv")
write.csv(tpmldata, "tp.csv")
View(tpmldata)
bpml %<+% bpml + geom_point2(aes(shape = NAT, subset=(NAT %in% "Appelscha Point")), size = 3, colour = "#a6cee3") + labs(title = "Appelscha Point")
bpml %<+% bpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Appelscha Point")), size = 3, colour = "#a6cee3") + labs(title = "Appelscha Point")
ggtree(bpml) %<+% bpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Appelscha Point")), size = 3, colour = "#a6cee3") + labs(title = "Appelscha Point")
ggtree(bpml) %<+% bpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Appelscha Point")), size = 3, colour = "#a6cee3") + labs(title = "Appelscha Point")
View(tpmldata)
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Bromme Point")), size = 3, colour = "#a6cee3") + labs(title = "NAT: Bromme Point")
ggtree(bpml) %<+% bpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Appelscha Point")), size = 3, colour = "#a6cee3") + labs(title = "NAT: Appelscha Point")
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Bromme Point")), size = 3, colour = "#bd284c") + labs(title = "NAT: Bromme Point")
View(tpmldata)
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Tanged Point Technocomplex")), size = 3, colour = "#bd284c") + labs(title = "ATU: Tanged Point Technocomplex")
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Bromme Point")), size = 3, colour = "#bd284c") + labs(title = "NAT: Bromme Point")
ggtree(bpml) %<+% bpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Appelscha Point")), size = 3, colour = "#a6cee3") + labs(title = "NAT: Appelscha Point")
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Bromme Point")), size = 2, colour = "#28bd33") + labs(title = "NAT: Bromme Point")
d <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Tanged Point Technocomplex")), size = 2, colour = "#bd284c") + labs(title = "ATU: Tanged Point Technocomplex")
e <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Bromme Point")), size = 2, colour = "#28bd33") + labs(title = "NAT: Bromme Point")
multiplot(d, e)
multiplot(d, e, ncol = 1)
rm(d)
rm(e)
View(tpmldata)
tp1 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Bromme")), size = 2, colour = "#bd284c") + labs(title = "ATU: Bromme")
tp2 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Upper Magdalenian")), size = 2, colour = "#bd284c") + labs(title = "ATU: Upper Magdalenian")
tp3 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Ahrensburgian")), size = 2, colour = "#bd284c") + labs(title = "ATU: Ahrensburgian")
tp4 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Lyngby")), size = 2, colour = "#bd284c") + labs(title = "ATU: Lyngby")
tp5 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Federmesser")), size = 2, colour = "#bd284c") + labs(title = "ATU: Federmesser")
tp6 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Azilian")), size = 2, colour = "#bd284c") + labs(title = "ATU: Azilian")
tp7 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Unspecified")), size = 2, colour = "#bd284c") + labs(title = "ATU: Unspecified")
multiplot(tp1, tp2, tp3, tp4,tp5, tp6, tp7, ncol = 2)
tp1 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Bromme")), size = 2, colour = "#ed980d") + labs(title = "Bromme")
tp2 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Upper Magdalenian")), size = 2, colour = "#ed980d") + labs(title = "Upper Magdalenian")
tp3 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Ahrensburgian")), size = 2, colour = "#ed980d") + labs(title = "Ahrensburgian")
tp4 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Lyngby")), size = 2, colour = "#ed980d") + labs(title = "Lyngby")
tp5 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Federmesser")), size = 2, colour = "#ed980d") + labs(title = "Federmesser")
tp6 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Azilian")), size = 2, colour = "#ed980d") + labs(title = "Azilian")
tp7 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Unspecified")), size = 2, colour = "#ed980d") + labs(title = "Unspecified")
multiplot(tp1, tp2, tp3, tp4,tp5, tp6, tp7, ncol = 2)
if(!require("kohenen")) install.packages('kohenen', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
grid.som <- somgrid(xdim = 8, ydim = 8, topo = "hexagonal")
bpx <- scale(pcabp$x)
tpx <- scale(pcatp$x)
summary(bpx)
summary(tpx)
grid.som <- somgrid(xdim = 8, ydim = 8, topo = "hexagonal")
bpx <- scale(pcabp$x)
tpx <- scale(pcatp$x)
summary(bpx)
summary(tpx)
#SOM
set.seed(222)
bpmap <- som(bpx, grid = grid.som, alpha = c(0.05, 0.01), radius = 1)
bpmap
plot(bpmap, type = "changes")
plot(bpmap,  main = "Self Organising Map (SOM) of PC variance")
plot(bpmap, type = "count") # counts in each node
plot(bpmap, main = "Self Organising Map (SOM) of PC variance", type = "mapping") # counts in each node
tpmap <- som(tpx, grid = grid.som, alpha = c(0.05, 0.01), radius = 1)
tpmap
plot(tpmap, type = "changes")
plot(tpmap,  main = "Self Organising Map (SOM) of PC variance")
plot(tpmap, type = "count") # counts in each node
plot(tpmap, main = "Self Organising Map (SOM) of PC variance", type = "mapping") # counts in each node
plot(bpmap,  main = "Self Organising Map (SOM) of PC variance")
plot(bpmap, type = "count") # counts in each node
plot(bpmap, main = "Self Organising Map (SOM) of PC variance", type = "mapping") # counts in each node
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("Momocs")) install.packages('geomorph', repos='http://cran.us.r-project.org')
if(!require("ggtree")) install.packages('ggtree', repos='http://cran.us.r-project.org')
if(!require("ape")) install.packages('ape', repos='http://cran.us.r-project.org')
if(!require("Rphylip")) install.packages('Rphylip', repos='http://cran.us.r-project.org')
if(!require("tidytree")) install.packages('tidytree', repos='http://cran.us.r-project.org')
if(!require("phytools")) install.packages('phytools', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
cmatrix <- semi_join(tpmldata, bpmldata, by = c("FN" = "FN"))
View(cmatrix)
rm(cmatrix)
View(tpmldata)
View(bpmldata)
cmatrix <- inner_join(tpmldata, bpmldata, by = "Site")
View(cmatrix)
cmatrix <- select(cmatrix, Sitebp = FN.x, Sitetp = FN.y)
View(cmatrix)
View(cmatrix)
ggtree(bpml, layout = "circular") + theme_tree() + geom_nodepoint(size = 0.5) + geom_tiplab(size = 0.5, colour = "red")
ggtree(bpml, layout = 'circular') + theme_tree() + geom_nodepoint(size = 0.5) + geom_tiplab(size = 0.5, colour = "red")
ggtree(bpml, layout = 'circular') + theme_tree() + geom_nodepoint(size = 0.5)
plot(bpml, type = "fan")
plot(bpml, type = "circular")
plot(bpml, type = "phlogram")
plot(bpml, type = "circular")
plot(bpml, type = "radial")
plot(bpml, type = "radial", label = FALSE)
ggtree(bpml)
ggtree(tpml)
plot(bpml)
multiplot(tp1, tp2, tp3, tp4,tp5, tp6, tp7, ncol = 2) ### multiplot of ATU
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE, label = Site), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(shape = ATU, align = TRUE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(shape = ATU, align = TRUE, label = FALSE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(shape = ATU, align = TRUE, label = NULL), size = 3)
ggtree(bpml) %<+% bpmldata + geom_nodepoint(aes(shape = ATU, align = TRUE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_nodepoint2(aes(shape = ATU, align = TRUE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_nodepoint(aes(colour = ATU, align = TRUE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU, align = TRUE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU, shape = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, shape = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(shape = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, align = TRUE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE, label = Site), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, shape = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, shape = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
View(tpmldata)
summary(tpmldata$ATU)
summary(tpml)
View(tpmldata)
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, align = TRUE, label = site), size = 3) + theme_minimal()
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, align = TRUE, label = Site), size = 3) + theme_minimal()
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(align = TRUE, label = Site), size = 3) + theme_minimal()
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU, align = TRUE, label = Site), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tiplabel(aes(colour = ATU, align = TRUE, label = Site), size = 3)
ggtree(tpml) %<+% tpmldata + geom_point2(aes(colour = ATU, align = TRUE, label = Site), size = 3)
ggtree(tpml) %<+% tpmldata + geom_point2(aes(colour = ATU, align = TRUE, label = Site), size = 3)
ggtree(tpml) %<+% tpmldata + geom_nodepoint2(aes(colour = ATU, align = TRUE, label = Site), size = 3)
ggtree(tpml) %<+% tpmldata + geom_nodepoint(aes(colour = ATU, align = TRUE, label = Site), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU, align = TRUE, label = Site), size = 3)
d <- bpml$tip.label
write.csv(d, "nodelabel.csv")
write.csv(tpmldata$Site, "datasetlabel.csv")
tpml$tip.label
tpmldata$FN
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE, label = FN), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU, align = TRUE, label = FN), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU, align = TRUE, label = Site), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU2, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU2, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3)
rm(d)
rm(e)
View(tpmldata)
tpml$tip.label
View(tpmldata)
View(tpmldata)
pcatp
pcatp$Site
pcatp$FN
View(tpmldata)
backed.points$Site <- as.character(backed.points$Site)
backed.points$Context <- as.character(backed.points$Context)
tanged.points$Site <- as.character(tanged.points$Site)
tanged.points$Context <- as.character(tanged.points$Context)
outlinebp <- Out(backedpoints$coo, fac = backed.points)
outlinebp <- filter(outlinebp, Burinated=="N") ### removal of burinated examples
outlinebp <- filter(outlinebp, OTT=="Y") ### removal of cutting edges less than two-thirds
detach("package:Momocs", unload = TRUE)
library(Momocs)
tanged.points <- read.csv("tanged.points.csv", header = TRUE, sep = ",", encoding = "UTF-8", row.names = 1)
backed.points$Site <- as.character(backed.points$Site)
backed.points$Context <- as.character(backed.points$Context)
tanged.points$Site <- as.character(tanged.points$Site)
tanged.points$Context <- as.character(tanged.points$Context)
outlinebp <- Out(backedpoints$coo, fac = backed.points)
outlinebp <- filter(outlinebp, Burinated=="N") ### removal of burinated examples
outlinebp <- filter(outlinebp, OTT=="Y") ### removal of cutting edges less than two-thirds
outlinetp <- Out(tangedpoints$coo, fac = tanged.points)
outlinetp <- filter(outlinetp, Burinated=="N") ### removal of burinated examples
outlinebp$coo[which(outlinebp$Retouch.position=="Right")] <- lapply(outlinebp$coo[which(outlinebp$Retouch.position=="Right")], coo_flipy) ### flip outline
outlinebp$coo[which(outlinebp$Retouch.position=="Right")] <- lapply(outlinebp$coo[which(outlinebp$Retouch.position=="Right")], coo_rev) ### reverse landmark order
outlinebp <- coo_centre(outlinebp) ### centre outlines
outlinetp <- coo_centre(outlinetp) ### centre outlines
outlinebp <- coo_scale(outlinebp) ### scale outlines
outlinetp <- coo_scale(outlinetp) ### scale outlines
stack(outlinebp, title = "") ### bp: visualisation (stack)
efourierbp <- efourier(outlinebp, nb.h = 22,  norm = TRUE) ### bp: 22 harmonics for 99%
efouriertp <- efourier(outlinetp, nb.h = 31, norm = TRUE) ### tp: 31 harmonics for 99%
pcabp <- PCA(efourierbp) ### bp: creation of PCA
pcatp <- PCA(efouriertp) ### tp: creation of PCA
tpmldata <- select(pcatp$fac, FN, Site, ATU, ATU2, NAT) %>% droplevels()
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("Momocs")) install.packages('geomorph', repos='http://cran.us.r-project.org')
if(!require("ggtree")) install.packages('ggtree', repos='http://cran.us.r-project.org')
if(!require("ape")) install.packages('ape', repos='http://cran.us.r-project.org')
if(!require("Rphylip")) install.packages('Rphylip', repos='http://cran.us.r-project.org')
if(!require("tidytree")) install.packages('tidytree', repos='http://cran.us.r-project.org')
if(!require("phytools")) install.packages('phytools', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
setwd("C:/Users/cshog/Dropbox/CHRISTIAN/Academic Work/TP_BP_Project/data/rproject_analysis")
write.tree(bpml, file = "bptree")
write.tree(tpml, file = "tptree")
bpmltree <- read.tree(file = "bptree") ### file read (alternative)
ggtree(bpmltree)
ggtree(bpmltree) + theme_tree() + geom_nodepoint(size = 0.5) + geom_tiplab(size = 1, colour = "red")
ggtree(bpml) + theme_tree() + geom_nodepoint(size = 0.5) + geom_tiplab(size = 1, colour = "red")
ggtree(tpml) + theme_tree() + geom_nodepoint(size = 0.5) + geom_tiplab(size = 1, colour = "red")
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3)
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Tanged Point Technocomplex")), size = 2, colour = "#bd284c") + labs(title = "ATU: Tanged Point Technocomplex")
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Bromme Point")), size = 2, colour = "#28bd33") + labs(title = "NAT: Bromme Point")
ggtree(bpml) %<+% bpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Appelscha Point")), size = 2, colour = "#a6cee3") + labs(title = "NAT: Appelscha Point")
tp1 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Bromme")), size = 2, colour = "#ed980d") + labs(title = "Bromme")
tp2 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Upper Magdalenian")), size = 2, colour = "#ed980d") + labs(title = "Upper Magdalenian")
tp3 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Ahrensburgian")), size = 2, colour = "#ed980d") + labs(title = "Ahrensburgian")
tp4 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Lyngby")), size = 2, colour = "#ed980d") + labs(title = "Lyngby")
tp5 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Federmesser")), size = 2, colour = "#ed980d") + labs(title = "Federmesser")
tp6 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Azilian")), size = 2, colour = "#ed980d") + labs(title = "Azilian")
tp7 <- ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Unspecified")), size = 2, colour = "#ed980d") + labs(title = "Unspecified")
multiplot(tp1, tp2, tp3, tp4,tp5, tp6, tp7, ncol = 2) ### multiplot of ATU
ggtree(bpml) + theme_tree() + geom_nodepoint(size = 0.5) + geom_tiplab(size = 1, colour = "red")
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3)
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
###
bpml$tip.label
###
d <- cbind(bpml$tip.label, bpmldata$FN)
View(d)
###
d <- cbind(bpml$tip.label, bpmldata)
View(d)
rm(d)
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
###
write.csv("bpmlscreen.csv", bpml$tip.label))
###
write.csv("bpmlscreen.csv", bpml$tip.label)
###
write.csv(bpml$tip.label, "bpmlscreen.csv")
###
write.csv(bpmldata$FN, "bpmldatascreen.csv")
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "NA")), size = 2, colour = "#bd284c") + labs(title = "ATU: Tanged Point Technocomplex")
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Tanged Point Technocomplex")), size = 2, colour = "#bd284c") + labs(title = "ATU: Tanged Point Technocomplex")
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Tanged Point Technocomplex")), size = 2, colour = "#bd284c") + labs(title = "ATU: Tanged Point Technocomplex")
ggtree(tpml) %<+% tpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
ggtree(bpml) %<+% bpmldata + geom_nodepoint
ggtree(bpml) %<+% bpmldata + geom_nodepoint()
ggtree(bpml) %<+% bpmldata + geom_tippoint()
ggtree(bpml) %<+% bpmldata + geom_tippoint2()
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU))
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU))
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU, align = TRUE))
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU, na.rm = TRUE))
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU, na.rm = TRUE))
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU) + theme_minimal()
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU) + theme_minimal()
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU)) + theme_minimal()
ggtree(bpml) %<+% bpmldata + geom_tippoint(aes(colour = ATU)) + theme_minimal() + scale_colour_manual("#D43F3A", "#EEA236", "#5BB85C", "#D8099C", "#46B8DA", "#357EBD", "#9632B8", "#767676", "#8F3931", "#340E20")
ggtree(tpml) %<+% tpmldata + geom_tippoint(aes(colour = ATU)) + theme_minimal()
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = ATU, subset=(ATU %in% "Tanged Point Technocomplex")), size = 2, colour = "#bd284c") + labs(title = "ATU: Tanged Point Technocomplex")
ggtree(tpml) %<+% tpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Bromme Point")), size = 2, colour = "#28bd33") + labs(title = "NAT: Bromme Point")
ggtree(bpml) %<+% bpmldata + geom_point2(aes(shape = NAT, subset=(NAT %in% "Appelscha Point")), size = 2, colour = "#a6cee3") + labs(title = "NAT: Appelscha Point")
View(cmatrix)
ggtree(bpml, shape = "circular") %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
ggtree(bpml, layout = "circular") %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
ggtree(bpml) %<+% bpmldata + geom_tiplab(aes(colour = ATU, align = TRUE), size = 3) + theme_minimal()
ggtree(tpml, layout = "circular") %<+% tpmldata + geom_tippoint(aes(colour = ATU)) + theme_minimal()
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("Momocs")) install.packages('geomorph', repos='http://cran.us.r-project.org')
if(!require("ggtree")) install.packages('ggtree', repos='http://cran.us.r-project.org')
if(!require("ape")) install.packages('ape', repos='http://cran.us.r-project.org')
if(!require("Rphylip")) install.packages('Rphylip', repos='http://cran.us.r-project.org')
if(!require("tidytree")) install.packages('tidytree', repos='http://cran.us.r-project.org')
if(!require("phytools")) install.packages('phytools', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
if(!require("cowplot")) install.packages('cowplot', repos='http://cran.us.r-project.org')
cophyloml <- cophylo(bpml, tpml, assoc = cmatrix, rotate = TRUE, print = TRUE)
plot(cophyloml)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("treeio")
library(treeio)
View(bpmldata)
bpml2 <- rename(bpml, pcabp$fac, FN, Context)
bpml2 <- rename_taxa(bpml, pcabp$fac, FN, Context)
ggtree(bpml2)
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("Momocs")) install.packages('geomorph', repos='http://cran.us.r-project.org')
if(!require("ggtree")) install.packages('ggtree', repos='http://cran.us.r-project.org')
if(!require("ape")) install.packages('ape', repos='http://cran.us.r-project.org')
if(!require("Rphylip")) install.packages('Rphylip', repos='http://cran.us.r-project.org')
if(!require("tidytree")) install.packages('tidytree', repos='http://cran.us.r-project.org')
if(!require("phytools")) install.packages('phytools', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
if(!require("cowplot")) install.packages('cowplot', repos='http://cran.us.r-project.org')
ggtree(bpml2)
ggtree(bpml2) + geom_tiplab()
bpml2 <- rename_taxa(bpml, pcabp$fac, FN, Site)
ggtree(bpml2) + geom_tiplab()
ggtree(bpml2) + geom_tiplab(size = 1)
tpml2 <- rename_taxa(bpml, pcabp$fac, FN, Site)
ggtree(tpml2) + geom_tiplab(size = 1)
ggtree(tpml2) + geom_tiplab(size = 1)
tpml2 <- rename_taxa(tpml, pcatp$fac, FN, Site) ### RENAMING TIP LABELS (FN TO SITE)
ggtree(tpml2) + geom_tiplab(size = 1)
ggtree(tpml2) + geom_tiplab(size = 1.5)
test <- dendlist(bpml2, tpml2)
library(dendextend)
test <- dendlist(bpml2, tpml2)
test <- dendlist(bpml2, tpml2)
tanglegram(bpml2, tpml2)
cophyloml2 <- cophylo(bpml2, tpml2, assoc = cmatrix, rotate = TRUE)
cophyloml2 <- cophylo(bpml2, tpml2, assoc = cmatrix, rotate = TRUE)
#### METHOD #1: COPHYLO FUNCTION (PHYTOOLS)
cmatrix <- inner_join(bpmldata, tpmldata, by = "Context")
#### METHOD #1: COPHYLO FUNCTION (PHYTOOLS)
cmatrix <- inner_join(bpmldata, tpmldata, by = "Site")
rm(cmatrix)
install.packages("mvMORPH")
library(mvMORPH)
tanglegram(bpml2, tpml2)
View(cmatrix)
#### METHOD #2: RENAMING AND TANGLEGRAM FUNCTION (DENDEXTEND/TREEIO)
bpml2 <- rename_taxa(bpml, pcabp$fac, FN, Site) ### RENAMING TIP LABELS (FN TO SITE)
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("Momocs")) install.packages('geomorph', repos='http://cran.us.r-project.org')
if(!require("ggtree")) install.packages('ggtree', repos='http://cran.us.r-project.org')
if(!require("ape")) install.packages('ape', repos='http://cran.us.r-project.org')
if(!require("Rphylip")) install.packages('Rphylip', repos='http://cran.us.r-project.org')
if(!require("tidytree")) install.packages('tidytree', repos='http://cran.us.r-project.org')
if(!require("phytools")) install.packages('phytools', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
if(!require("cowplot")) install.packages('cowplot', repos='http://cran.us.r-project.org')
#### METHOD #2: RENAMING AND TANGLEGRAM FUNCTION (DENDEXTEND/TREEIO)
bpml2 <- rename_taxa(bpml, pcabp$fac, FN, Site) ### RENAMING TIP LABELS (FN TO SITE)
library(dendextend)
#### METHOD #2: RENAMING AND TANGLEGRAM FUNCTION (DENDEXTEND/TREEIO)
bpml2 <- rename_taxa(bpml, pcabp$fac, FN, Site) ### RENAMING TIP LABELS (FN TO SITE)
detach("package:dendextend", unload = TRUE)
library(dendextend)
library(treeio)
#### METHOD #2: RENAMING AND TANGLEGRAM FUNCTION (DENDEXTEND/TREEIO)
bpml2 <- rename_taxa(bpml, pcabp$fac, FN, Site) ### RENAMING TIP LABELS (FN TO SITE)
tpml2 <- rename_taxa(tpml, pcatp$fac, FN, Site) ### RENAMING TIP LABELS (FN TO SITE)
cmatrix2 <- inner_join(bpmldata, tpmldata, by = "Site")
View(cmatrix2)
View(cmatrix2)
cmatrix2 <- select(cmatrix, ArtefactBP = Site, ArtefactTP = Site)
cmatrix2 <- select(cmatrix2, ArtefactBP = Site, ArtefactTP = Site)
cmatrix2 <- select(cmatrix2, ArtefactBP = Site, ArtefactTP = Site)
cmatrix2 <- inner_join(bpmldata, tpmldata, by = "Site")
rm(cmatrix2)
cmatrix2 <- inner_join(bpmldata, tpmldata, by = "Site")
cmatrix2 <- select(cmatrix2, ArtefactBP = Site, ArtefactTP = Site)
cmatrix23 <- select(cmatrix2, ArtefactBP = Site, ArtefactTP = Site)
rm(cmatrix23)
rm(cmatrix2)
cmatrix2 <- inner_join(bpmldata, tpmldata, by = "Site")
cmatrix23 <- select(cmatrix2, ArtefactBP = Site, ArtefactTP = Site)
rm(cmatrix23)
cmatrix2 <- select(cmatrix2, ArtefactBP = Site)
cmatrix2 <- mutate(cmatrix2, ArtefactTP = ArtefactBP)
View(cmatrix2)
cophyloml2 <- cophylo(bpml2, tpml2, assoc = cmatrix2, rotate = TRUE)
cophyloml2 <- cophylo(bpml2, tpml2, assoc = cmatrix2, rotate = FALSE)
View(cmatrix)
ggtree(bpml2) + geom_tiplab(size = 1)
plot(cophyloml)
#### METHOD #1: COPHYLO FUNCTION (PHYTOOLS)
cmatrix <- inner_join(bpmldata, tpmldata, by = "Site")
cmatrix <- select(cmatrix, ArtefactBP = FN.x, ArtefactTP = FN.y)
cophyloml <- cophylo(bpml, tpml, assoc = cmatrix, rotate = TRUE)
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("Momocs")) install.packages('geomorph', repos='http://cran.us.r-project.org')
if(!require("ggtree")) install.packages('ggtree', repos='http://cran.us.r-project.org')
if(!require("ape")) install.packages('ape', repos='http://cran.us.r-project.org')
if(!require("Rphylip")) install.packages('Rphylip', repos='http://cran.us.r-project.org')
if(!require("tidytree")) install.packages('tidytree', repos='http://cran.us.r-project.org')
if(!require("phytools")) install.packages('phytools', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
if(!require("cowplot")) install.packages('cowplot', repos='http://cran.us.r-project.org')
backedpoints <- import_tps("TPS_BP_27_09_2019.tps", curves = TRUE) ### import .tps file
setwd("C:/Users/cshog/Dropbox/CHRISTIAN/Academic Work/GitHub/-TP_BP_Analysis/rproject_analysis")
backedpoints <- import_tps("TPS_BP_27_09_2019.tps", curves = TRUE) ### import .tps file
backedpoints <- import_tps("TPS_BP_18_10_2019.tps", curves = TRUE) ### import .tps file
tangedpoints <- import_tps("TPS_TP_27_09_2019.tps", curves = TRUE) ### import .tps file
backed.points <- read.csv("backed.points.csv", header = TRUE, sep = ",", encoding = "UTF-8", row.names = 1)
tanged.points <- read.csv("tanged.points.csv", header = TRUE, sep = ",", encoding = "UTF-8", row.names = 1)
install.packages("tmap")
library(tmap)
tm_shape(germany)
tm_shape(nz)
tm_shape(nz) +
tm_fill()
install.packages("sf")
tm_shape(nz) +
tm_fill()
library(tmap)
tm_shape(nz) +
tm_fill()
tm_shape(World)
backed.points$Site <- as.character(backed.points$Site)
backed.points$Context <- as.character(backed.points$Context)
tanged.points$Site <- as.character(tanged.points$Site)
tanged.points$Context <- as.character(tanged.points$Context)
backedpoints <- import_tps("TPS_BP_18_10_2019.tps", curves = TRUE) ### import .tps file
tangedpoints <- import_tps("TPS_TP_27_09_2019.tps", curves = TRUE) ### import .tps file
backed.points <- read.csv("backed.points.csv", header = TRUE, sep = ",", encoding = "UTF-8", row.names = 1)
tanged.points <- read.csv("tanged.points.csv", header = TRUE, sep = ",", encoding = "UTF-8", row.names = 1)
backed.points$Site <- as.character(backed.points$Site)
backed.points$Context <- as.character(backed.points$Context)
tanged.points$Site <- as.character(tanged.points$Site)
tanged.points$Context <- as.character(tanged.points$Context)
outlinebp <- Out(backedpoints$coo, fac = backed.points)
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("Momocs")) install.packages('geomorph', repos='http://cran.us.r-project.org')
if(!require("ggtree")) install.packages('ggtree', repos='http://cran.us.r-project.org')
if(!require("ape")) install.packages('ape', repos='http://cran.us.r-project.org')
if(!require("Rphylip")) install.packages('Rphylip', repos='http://cran.us.r-project.org')
if(!require("tidytree")) install.packages('tidytree', repos='http://cran.us.r-project.org')
if(!require("phytools")) install.packages('phytools', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
if(!require("cowplot")) install.packages('cowplot', repos='http://cran.us.r-project.org')
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("Momocs")) install.packages('geomorph', repos='http://cran.us.r-project.org')
if(!require("ggtree")) install.packages('ggtree', repos='http://cran.us.r-project.org')
if(!require("ape")) install.packages('ape', repos='http://cran.us.r-project.org')
if(!require("Rphylip")) install.packages('Rphylip', repos='http://cran.us.r-project.org')
if(!require("tidytree")) install.packages('tidytree', repos='http://cran.us.r-project.org')
if(!require("phytools")) install.packages('phytools', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
if(!require("cowplot")) install.packages('cowplot', repos='http://cran.us.r-project.org')
backedpoints <- import_tps("TPS_BP_18_10_2019.tps", curves = TRUE) ### import .tps file
tangedpoints <- import_tps("TPS_TP_27_09_2019.tps", curves = TRUE) ### import .tps file
backed.points <- read.csv("backed.points.csv", header = TRUE, sep = ",", encoding = "UTF-8", row.names = 1)
tanged.points <- read.csv("tanged.points.csv", header = TRUE, sep = ",", encoding = "UTF-8", row.names = 1)
outlinebp <- Out(backedpoints$coo, fac = backed.points)
outlinebp <- filter(outlinebp, Burinated=="N") ### removal of burinated examples
outlinebp <- filter(outlinebp, OTT=="Y") ### removal of cutting edges less than two-thirds
detach("package:Momocs", unload = TRUE)
library(Momocs)
backed.points$Site <- as.character(backed.points$Site)
backed.points$Context <- as.character(backed.points$Context)
tanged.points$Site <- as.character(tanged.points$Site)
tanged.points$Context <- as.character(tanged.points$Context)
outlinebp <- Out(backedpoints$coo, fac = backed.points)
outlinebp <- filter(outlinebp, Burinated=="N") ### removal of burinated examples
outlinebp <- filter(outlinebp, OTT=="Y") ### removal of cutting edges less than two-thirds
outlinetp <- Out(tangedpoints$coo, fac = tanged.points)
outlinetp <- filter(outlinetp, Burinated=="N") ### removal of burinated examples
View(tanged.points)
outlinebpatu  <- filter(outlinebp, !ATU %in% "Unspecified")
View(outlinebpatu)
outlinebpatu$ATU
outlinebpatu  <- filter(outlinebp, !ATU %in% "Unspecified", !ATU %in% "Multiple")
outlinebpatu$ATU
outlinebpatu2 <- filter(outlinebp, !ATU %in% "Unspecified")
outlinebpatu2$ATU
outlinebpatu2 <- filter(outlinebp, !ATU %in% "Unspecified", !ATU %in% "Multiple")
outlinebpatu2 <- filter(outlinebp, !ATU %in% "Unspecified", !ATU %in% "Multiple")
outlinebpatu2$ATU
summary(outlinebpatu2$ATU)
outlinebpatu  <- filter(outlinebp, !ATU %in% "Unspecified", !ATU %in% "Multiple", .preserve = TRUE)
summary(outlinebpatu$ATU)
summary(outlinebpatu$ATU)
outlinebpatu  <- filter(outlinebp, !ATU %in% "Unspecified", !ATU %in% "Multiple", .preserve = FALSE)
summary(outlinebpatu$ATU)
outlinebpNAT  <- filter(outlinebp, !ATU %in% "Unspecified")
outlinebpatu  <- filter(outlinebp, !ATU %in% "Unspecified", !ATU %in% "Multiple")
summary(outlinebpatu$ATU)
outlinebpatu2 <- filter(outlinebp, !ATU2 %in% "Unspecified", !ATU %in% "Multiple")
summary(outlinebpatu$ATU2)
outlinebp <- Out(backedpoints$coo, fac = backed.points)
outlinebp <- filter(outlinebp, Burinated=="N") ### removal of burinated examples
outlinebp <- filter(outlinebp, OTT=="Y") ### removal of cutting edges less than two-thirds
outlinebpatu  <- filter(outlinebp, !ATU %in% "Unspecified", !ATU %in% "Multiple")
summary(outlinebpatu)
summary(outlinebpatu$ATU)
outlinebpatu2 <- filter(outlinebp, !ATU2 %in% "Unspecified", !ATU2 %in% "Multiple")
summary(outlinebpatu2$ATU)
outlinebpatu2 <- filter(outlinebp, !ATU2 %in% "Unspecified")
outlinebpatu2 <- filter(outlinebp, !ATU2 %in% "Unspecified")
summary(outlinebpatu2$ATU)
summary(outlinebpatu2$ATU2)
summary(outlinebp$ATU)
summary(outlinebp$ATU2)
summary(outlinebp$NAT)
outlinebpNAT  <- filter(outlinebp, !NAT %in% "Backed Point (Unspecified)")
summary(outlinebpNAT)
summary(outlinebpatu)
summary(outlinebpatu$ATU)
summary(outlinebpatu2$ATU2)
summary(outlinebpNAT$NAT)
View(backed.points)
